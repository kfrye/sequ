Kristina Frye
CS 300
November 2, 2013

sequ - Compliance Level 1

Parse the arguments from the command line:

   There will be at least one argument (a number). If so, this will be the
   "last" argument. "first" will be 1, and "increment" will be 1

   There might be two arguments, both numbers. If so, the first argument will be
   "first" and the second argument will be "last." "Increment" will be 1.

   There might be three arguments, all numbers. If so, the first argument
   will be "first". The second will be "increment". The third will be "last."

   If the first argument is the string "-f" called "option," then the second
   argument will be a string called "format," and there will be 1, 2, or 3
   more arguments, all numbers, as described above. 
  
   If the first argument starts with the string "--format", then it can 
   be parsed into two string arguments separated by a "=" called "option"
   and "format", which will work the same as above.

   If the first argument is the string "-s" called "option", then it will be
   followed by a string called "separator." The separator string may contain
   backslash escapes. It will be followed by 1, 2, or 3 numbers, which
   will be processed as described above.

   If the first argument starts with the string "--separator", then it
   can be parsed into two strings separated by a "=" called "option" and
   "separator" as described above.

   If the first argument starts with a "-w" or "--equal-width" called "option,"
   then it will be followed by 1, 2, or 3 numbers, as described above.

   If this is not the case, exit(1) (Failed)

In order to allow negative increments:

counter = first
run_loop = true
while (run_loop == true)
   print stuff
   counter = counter + increment 

   if(increment > 0 and counter <= last)
      run_loop = true
   else if(increment < 0 and counter >= last)
      run_loop = true
   else
      run_loop = false

Note about above check: I could combine the if/else statements into fewer
lines of code, but I thought this would make it a bit easier to read

Other input checking:
   If first > last
      if increment > 0
         exit(0) (Success)

   If abs(last - first) > 100000000, exit(1) (Failed)

